Searching 62 files for "ListNode" (case sensitive)

/Users/jejacobs/Documents/para/js/src/models/data/collections/ConstrainableList.js:
    5  define([
    6      'underscore',
    7:     'models/data/ListNode',
    8      'utils/PFloat',
    9      'utils/PBool',
   ..
   13    ],
   14  
   15:   function(_, ListNode, PFloat, PBool, paper, PConstraint) {
   16:     var ConstrainableList = ListNode.extend({
   17:       defaults: _.extend({}, ListNode.prototype.defaults, {
   18          name: 'list',
   19          index: 0,
   ..
   21  
   22        initialize: function() {
   23:         ListNode.prototype.initialize.apply(this, arguments);
   24          this.get('translation_delta').setNull(false);
   25          //code for creating list UI
   ..
   46        },
   47  
   48:       //overrides ListNode addMember and removeMember functions
   49        addMember: function(data) {
   50:         ListNode.prototype.addMember.call(this, data);
   51          var diff = this.members.length - this.indexNumbers.length;
   52          for (var i = 0; i < diff; i++) {
   ..
   64  
   65        removeMember: function(data) {
   66:         ListNode.prototype.removeMember.call(this, data);
   67          var diff = this.indexNumbers.length - this.members.length;
   68          console.log('diff', diff);
   ..
   75  
   76        reset: function() {
   77:         ListNode.prototype.reset.call(this, arguments);
   78          this.setIndex(0);
   79          var ui = this.get('ui');
   ..
  164        //renders the List UI
  165        render: function() {
  166:         ListNode.prototype.render.call(this, arguments);
  167          var ui = this.get('ui');
  168          var bottomLeft = this.get('screen_bottom_left').getValue();

/Users/jejacobs/Documents/para/js/src/models/data/collections/ListNode.js:
    1: /*ListNode.js
    2   * class for collections of user created objects
    3   */
    .
   13  ], function($, _, paper, Instance, PFloat, PConstraint) {
   14  
   15:   var ListNode = Instance.extend({
   16      defaults: _.extend({}, Instance.prototype.defaults, {
   17        name: 'list',
   ..
  472    });
  473  
  474:   return ListNode;
  475  
  476  

/Users/jejacobs/Documents/para/js/src/models/data/collections/Sampler.js:
    1  /*Sampler.js
    2   * base class for sampler datatype
    3:  * inherits from ListNode
    4   */
    5  
    6  define([
    7      'underscore',
    8:     'models/data/ListNode',
    9      'utils/PFloat',
   10      'utils/PPoint',
   ..
   14    ],
   15  
   16:   function(_, ListNode, PFloat, PPoint, PBool, paper) {
   17:     var Sampler = ListNode.extend({
   18:       defaults: _.extend({}, ListNode.prototype.defaults, {
   19          name: 'sampler',
   20          type: 'sampler',
   ..
   41          this.set('multiplier_map', new PPoint(0, 1, 'set'));
   42          this.set('loop', new PBool(false));
   43:         ListNode.prototype.initialize.apply(this, arguments);
   44          this.get('translation_delta').setNull(false);
   45  
   ..
   68        },
   69  
   70:       //overrides ListNode addMember and removeMember functions
   71        addMember: function(data) {
   72:         ListNode.prototype.addMember.call(this, data);
   73          var diff = this.members.length - this.indexNumbers.length;
   74          for (var i = 0; i < diff; i++) {
   ..
   87  
   88        removeMember: function(data) {
   89:         ListNode.prototype.removeMember.call(this, data);
   90          var diff = this.indexNumbers.length-this.members.length;
   91          console.log('diff',diff);
   ..
   97  
   98        reset: function() {
   99:         ListNode.prototype.reset.call(this, arguments);
  100          var start = this.accessProperty('start_index');
  101          this.setIndex(start);
  ...
  237  
  238        render: function() {
  239:         ListNode.prototype.render.call(this, arguments);
  240          var ui = this.get('ui');
  241          var bottomLeft = this.get('screen_bottom_left').getValue();

24 matches across 3 files
